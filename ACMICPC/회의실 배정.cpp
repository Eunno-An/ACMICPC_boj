
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <climits>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include<iomanip>

using namespace std;

/*
- endl 대신 '\n' 사용하기
- cin.tie(0) 사용
- 테스트 케이스 있는 문제일 시 전역변수 초기화 신경쓰기
- (A + B + C) % D = ((A + B) % D + C) % D
- 문자열 출력 문제는 정답 문자열 복사해서 코드에 넣기
- 괄호 사용 유의하기
- 문자열은 함수로 넘길 때 const & 잘 사용하기

- 최악의 경우 int 값 초과하는지, 배열 인덱스 초과하는지 확인
- n 범위 확인 (0인 경우), 양수음수 정수소수 확인, 불가케이스 -1 출력 등 확인
- 큰 배열 선언 시 전역선언, 테케 많을 시 초기화, 배열 용량 max N + 5
*/

#define MOD 1000000007
#define INT_MAX 987654321
#define MAX 100005

typedef long long int ll;
typedef pair<int, int> pii;

int N;
vector<pii> conf;
// 테스트 케이스 초기화 시
void init()
{

}

int main()
{
	//못품
	//알고리즘 자체가 생각나지 않음.
	//종료시점에 대해 정렬한 후, 그리디하게 탐색하면 되는 문제임.
	//시작 시간에 대해 정렬할 생각만 했지, 바꿔서 종료 시간에 대해 정렬할
	//생각은 하지 않았던 것이 나의 문제임.
	//안될꺼라고 생각해도, 한번 해 보자.
	//가끔은 생각의 전환이 필요한 문제
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	init();
	cin >> N;
	int start_t, end_t;
	pii input;
	int max_t = -1;
	int min_t = 100000001;
	for (int i = 0; i < N; i++) {
		cin >> start_t >> end_t;
		input.first = end_t;
		input.second = start_t;
		conf.push_back(input);
		
	}
	//각 스케줄의 "종료 시점"에 대해 정렬
	sort(conf.begin(), conf.end());
	
	int time = conf[0].first;
	int count = 1;
	for (int i = 1; i < N; i++) {
		if (time <= conf[i].second) {
			count++;
			time = conf[i].first;
		}
	}
	cout << count << '\n';


	return 0;
}